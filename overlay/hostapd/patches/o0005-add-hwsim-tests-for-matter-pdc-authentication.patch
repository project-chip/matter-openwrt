From 8fb8db830d0d8b593367333750441e4ed2f245eb Mon Sep 17 00:00:00 2001
From: Karsten Sperling <ksperling@apple.com>
Date: Thu, 20 Jul 2023 12:20:47 +1200
Subject: [PATCH] Add hwsim tests for Matter PDC authentication

Test that PSK, SAE, and PDC all work with the same BSS configuration.

---

Copyright (c) 2023 Project CHIP Authors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
---
 tests/hwsim/matter-client-cert.pem  |  42 ++++++++++
 tests/hwsim/matter-client-key.pem   |   5 ++
 tests/hwsim/matter-network-cert.pem |  42 ++++++++++
 tests/hwsim/matter-network-key.pem  |   5 ++
 tests/hwsim/matter-users            |   1 +
 tests/hwsim/test_ap_matter.py       | 117 ++++++++++++++++++++++++++++
 tests/hwsim/wpasupplicant.py        |   4 +-
 7 files changed, 214 insertions(+), 2 deletions(-)
 create mode 100644 tests/hwsim/matter-client-cert.pem
 create mode 100644 tests/hwsim/matter-client-key.pem
 create mode 100644 tests/hwsim/matter-network-cert.pem
 create mode 100644 tests/hwsim/matter-network-key.pem
 create mode 100644 tests/hwsim/matter-users
 create mode 100644 tests/hwsim/test_ap_matter.py

diff --git a/tests/hwsim/matter-client-cert.pem b/tests/hwsim/matter-client-cert.pem
new file mode 100644
index 000000000..774c60406
--- /dev/null
+++ b/tests/hwsim/matter-client-cert.pem
@@ -0,0 +1,42 @@
+Certificate:
+    Data:
+        Version: 3 (0x2)
+        Serial Number: 1 (0x1)
+    Signature Algorithm: ecdsa-with-SHA256
+        Issuer: CN=*
+        Validity
+            Not Before: Jan  1 00:00:01 2000 GMT
+            Not After : Dec 31 23:59:59 9999 GMT
+        Subject: CN=*
+        Subject Public Key Info:
+            Public Key Algorithm: id-ecPublicKey
+                Public-Key: (256 bit)
+                pub:
+                    04:a0:f1:66:f6:17:17:53:6d:1d:23:27:1e:94:6e:
+                    34:70:96:db:9a:8e:af:dd:06:26:9a:d6:33:e3:7b:
+                    68:4b:f4:99:df:6d:c5:7e:9a:2f:19:db:63:08:de:
+                    a4:f0:5e:7d:7c:52:0b:d8:03:a4:af:eb:de:90:1d:
+                    f4:b9:9a:8d:74
+                ASN1 OID: prime256v1
+                NIST CURVE: P-256
+        X509v3 extensions:
+            X509v3 Basic Constraints: critical
+                CA:FALSE
+            X509v3 Key Usage: critical
+                Digital Signature
+            X509v3 Extended Key Usage: critical
+                TLS Web Client Authentication, TLS Web Server Authentication
+    Signature Algorithm: ecdsa-with-SHA256
+         30:45:02:20:6c:76:81:bd:0c:2b:df:08:16:f3:25:05:3f:c8:
+         d2:e6:0b:47:a0:35:e6:c6:7c:a5:df:b0:c8:de:f5:cf:c7:cb:
+         02:21:00:af:61:fd:42:22:4e:41:c8:4a:b2:5b:7f:0b:72:a9:
+         0d:90:4f:7d:93:1f:34:87:12:b1:ff:76:b0:f0:e0:13:cb
+-----BEGIN CERTIFICATE-----
+MIIBSjCB8aADAgECAgEBMAoGCCqGSM49BAMCMAwxCjAIBgNVBAMMASowIBcNMDAw
+MTAxMDAwMDAxWhgPOTk5OTEyMzEyMzU5NTlaMAwxCjAIBgNVBAMMASowWTATBgcq
+hkjOPQIBBggqhkjOPQMBBwNCAASg8Wb2FxdTbR0jJx6UbjRwltuajq/dBiaa1jPj
+e2hL9JnfbcV+mi8Z22MI3qTwXn18UgvYA6Sv696QHfS5mo10o0IwQDAMBgNVHRMB
+Af8EAjAAMA4GA1UdDwEB/wQEAwIHgDAgBgNVHSUBAf8EFjAUBggrBgEFBQcDAgYI
+KwYBBQUHAwEwCgYIKoZIzj0EAwIDSAAwRQIgbHaBvQwr3wgW8yUFP8jS5gtHoDXm
+xnyl37DI3vXPx8sCIQCvYf1CIk5ByEqyW38LcqkNkE99kx80hxKx/3aw8OATyw==
+-----END CERTIFICATE-----
diff --git a/tests/hwsim/matter-client-key.pem b/tests/hwsim/matter-client-key.pem
new file mode 100644
index 000000000..6a03454bc
--- /dev/null
+++ b/tests/hwsim/matter-client-key.pem
@@ -0,0 +1,5 @@
+-----BEGIN EC PRIVATE KEY-----
+MHcCAQEEIEqNUvN3/qRqbCarHnt4BAXpHB5CyVHOl4KPDuTnV9htoAoGCCqGSM49
+AwEHoUQDQgAEoPFm9hcXU20dIycelG40cJbbmo6v3QYmmtYz43toS/SZ323Ffpov
+GdtjCN6k8F59fFIL2AOkr+vekB30uZqNdA==
+-----END EC PRIVATE KEY-----
diff --git a/tests/hwsim/matter-network-cert.pem b/tests/hwsim/matter-network-cert.pem
new file mode 100644
index 000000000..f4f75cc50
--- /dev/null
+++ b/tests/hwsim/matter-network-cert.pem
@@ -0,0 +1,42 @@
+Certificate:
+    Data:
+        Version: 3 (0x2)
+        Serial Number: 1 (0x1)
+    Signature Algorithm: ecdsa-with-SHA256
+        Issuer: CN=*
+        Validity
+            Not Before: Jan  1 00:00:01 2000 GMT
+            Not After : Dec 31 23:59:59 9999 GMT
+        Subject: CN=*
+        Subject Public Key Info:
+            Public Key Algorithm: id-ecPublicKey
+                Public-Key: (256 bit)
+                pub:
+                    04:0f:31:ca:80:a9:a8:63:82:72:24:0e:36:b8:cc:
+                    cf:d9:83:d5:f5:7a:1c:03:5b:29:48:37:c6:b3:59:
+                    cb:58:b3:e9:18:ec:ae:bb:02:d1:d3:07:37:b8:8b:
+                    99:c1:7c:88:51:e5:19:41:c0:32:c6:a0:b7:e3:60:
+                    77:c9:31:30:f9
+                ASN1 OID: prime256v1
+                NIST CURVE: P-256
+        X509v3 extensions:
+            X509v3 Basic Constraints: critical
+                CA:FALSE
+            X509v3 Key Usage: critical
+                Digital Signature
+            X509v3 Extended Key Usage: critical
+                TLS Web Client Authentication, TLS Web Server Authentication
+    Signature Algorithm: ecdsa-with-SHA256
+         30:46:02:21:00:b5:01:17:e4:9a:5f:4a:f6:24:01:4e:1c:cc:
+         14:e2:a5:ea:9a:03:11:f1:1c:7b:29:96:91:e9:82:1d:60:6c:
+         8f:02:21:00:de:c1:48:64:2e:e1:48:30:40:9c:71:c9:fb:2c:
+         07:fb:e4:9d:3e:c7:dd:f9:61:f1:29:80:e9:52:41:44:fc:6d
+-----BEGIN CERTIFICATE-----
+MIIBSzCB8aADAgECAgEBMAoGCCqGSM49BAMCMAwxCjAIBgNVBAMMASowIBcNMDAw
+MTAxMDAwMDAxWhgPOTk5OTEyMzEyMzU5NTlaMAwxCjAIBgNVBAMMASowWTATBgcq
+hkjOPQIBBggqhkjOPQMBBwNCAAQPMcqAqahjgnIkDja4zM/Zg9X1ehwDWylIN8az
+WctYs+kY7K67AtHTBze4i5nBfIhR5RlBwDLGoLfjYHfJMTD5o0IwQDAMBgNVHRMB
+Af8EAjAAMA4GA1UdDwEB/wQEAwIHgDAgBgNVHSUBAf8EFjAUBggrBgEFBQcDAgYI
+KwYBBQUHAwEwCgYIKoZIzj0EAwIDSQAwRgIhALUBF+SaX0r2JAFOHMwU4qXqmgMR
+8Rx7KZaR6YIdYGyPAiEA3sFIZC7hSDBAnHHJ+ywH++SdPsfd+WHxKYDpUkFE/G0=
+-----END CERTIFICATE-----
diff --git a/tests/hwsim/matter-network-key.pem b/tests/hwsim/matter-network-key.pem
new file mode 100644
index 000000000..467738914
--- /dev/null
+++ b/tests/hwsim/matter-network-key.pem
@@ -0,0 +1,5 @@
+-----BEGIN EC PRIVATE KEY-----
+MHcCAQEEIFO7j0xV/l6UXL+uTyG9ZKplBNdhT0nX7AKaNr3zXLB9oAoGCCqGSM49
+AwEHoUQDQgAEDzHKgKmoY4JyJA42uMzP2YPV9XocA1spSDfGs1nLWLPpGOyuuwLR
+0wc3uIuZwXyIUeUZQcAyxqC342B3yTEw+Q==
+-----END EC PRIVATE KEY-----
diff --git a/tests/hwsim/matter-users b/tests/hwsim/matter-users
new file mode 100644
index 000000000..8496898cd
--- /dev/null
+++ b/tests/hwsim/matter-users
@@ -0,0 +1 @@
+"@pdc.csa-iot.org" TLS
diff --git a/tests/hwsim/test_ap_matter.py b/tests/hwsim/test_ap_matter.py
new file mode 100644
index 000000000..9d82c892d
--- /dev/null
+++ b/tests/hwsim/test_ap_matter.py
@@ -0,0 +1,117 @@
+# Matter Per-Device Credentials Tests
+# Copyright (c) 2023 Project CHIP Authors
+#
+# This software may be distributed under the terms of the BSD license.
+# See README for more details.
+
+import hostapd
+import hwsim_utils
+import logging
+from utils import HwsimSkip
+
+logger = logging.getLogger()
+
+SSID = "test-matter"
+PASSWORD = "SecretMatterAP"
+
+
+def test_matter_wpa2_psk_client(dev, apdev):
+    """Matter AP - WPA2 PSK client"""
+    hapd, sta = prepare(dev, apdev)
+    connect_sta(sta, key_mgmt="WPA-PSK", pairwise="CCMP")
+    verify_sta_connection(sta, hapd)
+
+def test_matter_wpa3_sae_client(dev, apdev):
+    """Matter AP - WPA3 SAE client"""
+    hapd, sta = prepare(dev, apdev)
+    connect_sta(sta, key_mgmt="SAE", pairwise="CCMP", ieee80211w="2")
+    verify_sta_connection(sta, hapd)
+
+def test_matter_pdc_client(dev, apdev):
+    """Matter AP - PDC client"""
+    hapd, sta = prepare(dev, apdev)
+    connect_pdc_sta(sta)
+    verify_sta_connection(sta, hapd)
+    sta_info = hapd.get_sta(sta.own_addr())
+    identity = sta_info["dot1xAuthSessionUserName"]
+    if not identity.endswith("@pdc.csa-iot.org"):
+        raise Exception("Unexpected client identity: " + identity)
+
+def test_matter_pdc_client_no_mfp_rejected(dev, apdev):
+    """Matter AP - PDC client rejected if MFP is disabled"""
+    raise HwsimSkip("TODO: MFP enforcement")
+    hapd, sta = prepare(dev, apdev)
+    connect_pdc_sta(sta, wait_connect=False, ieee80211w="0")
+    disconnect = expect_event(sta, "CTRL-EVENT-DISCONNECTED", reject="CTRL-EVENT-CONNECTED")
+    if "locally_generated=1" in disconnect:
+        raise Exception("Disconnect should be AP-generated")
+
+
+def prepare(dev, apdev):
+    sta = dev[0]
+    check_support(sta)
+    hapd = hostapd.add_ap(apdev[0], hapd_params())
+    return hapd, sta
+
+def check_support(dev):
+    tls = dev.request("GET tls_library")
+    if tls.startswith("internal"):
+        raise HwsimSkip("Matter authentication not supported with this TLS library: " + tls)
+
+def hapd_params(**kwargs):
+    return merged_dict(kwargs,
+        ssid=SSID,
+        wpa_passphrase=PASSWORD,
+        wpa="2",
+        rsn_pairwise="CCMP",
+        wpa_key_mgmt="WPA-PSK SAE",
+        vendor_elements="dd064a191b010100",
+        wpa_unadvertised_key_mgmt="WPA-EAP-SHA256",
+        ieee80211w="1",
+        ieee8021x="1",
+        eap_server="1",
+        openssl_ciphers="TLS_AES_128_CCM_SHA256",
+        openssl_ecdh_curves="P-256",
+        tls_flags="[DISABLE-TLSv1.0][DISABLE-TLSv1.1][DISABLE-TLSv1.2][ENABLE-TLSv1.3]",
+        eap_user_file="matter-users",
+        server_cert="matter-network-cert.pem",
+        private_key="matter-network-key.pem",
+        ca_cert="matter-client-cert.pem")
+
+def connect_sta(dev, **kwargs):
+    dev.connect(SSID, **merged_dict(kwargs, psk=PASSWORD, scan_freq="2412"))
+
+def connect_pdc_sta(dev, **kwargs):
+    connect_sta(dev, **merged_dict(kwargs,
+        key_mgmt="WPA-EAP-SHA256",
+        fallback_key_mgmt="WPA-EAP-SHA256",
+        pairwise="CCMP",
+        ieee80211w="2",
+        eap="TLS",
+        eap_workaround="0",
+        identity="@pdc.csa-iot.org",
+        phase1="tls_disable_tlsv1_0=1,tls_disable_tlsv1_1=1,tls_disable_tlsv1_2=1,tls_disable_tlsv1_3=0",
+        openssl_ciphers="TLS_AES_128_CCM_SHA256",
+        openssl_ecdh_curves="P-256",
+        client_cert="matter-client-cert.pem",
+        private_key="matter-client-key.pem",
+        ca_cert="matter-network-cert.pem"))
+
+def verify_sta_connection(dev, hapd):
+    hapd.wait_sta()
+    hwsim_utils.test_connectivity(dev, hapd)
+
+def expect_event(dev, events, reject=[], timeout=5):
+    ev = dev.wait_event(ensure_list(events) + ensure_list(reject), timeout)
+    if not ev:
+        raise Exception("Timed out waiting for expected event(s): " + str(events))
+    for r in ensure_list(reject):
+        if r in ev:
+            raise Exception("Unexpected event: " + r)
+    return ev
+
+def merged_dict(overrides, **defaults):
+    return dict(defaults, **overrides)
+
+def ensure_list(arg):
+    return arg if isinstance(arg, list) else [arg]
diff --git a/tests/hwsim/wpasupplicant.py b/tests/hwsim/wpasupplicant.py
index 160aa3e2d..363276046 100644
--- a/tests/hwsim/wpasupplicant.py
+++ b/tests/hwsim/wpasupplicant.py
@@ -1078,7 +1078,7 @@ class WpaSupplicant:
                   "private_key_passwd", "ca_cert2", "client_cert2",
                   "private_key2", "phase1", "phase2", "domain_suffix_match",
                   "altsubject_match", "subject_match", "pac_file", "dh_file",
-                  "bgscan", "ht_mcs", "id_str", "openssl_ciphers",
+                  "bgscan", "ht_mcs", "id_str", "openssl_ciphers", "openssl_ecdh_curves",
                   "domain_match", "dpp_connector", "sae_password",
                   "sae_password_id", "check_cert_subject",
                   "machine_ca_cert", "machine_client_cert",
@@ -1087,7 +1087,7 @@ class WpaSupplicant:
             if field in kwargs and kwargs[field]:
                 self.set_network_quoted(id, field, kwargs[field])
 
-        not_quoted = ["proto", "key_mgmt", "ieee80211w", "pairwise",
+        not_quoted = ["proto", "key_mgmt", "fallback_key_mgmt", "ieee80211w", "pairwise",
                       "group", "wep_key0", "wep_key1", "wep_key2", "wep_key3",
                       "wep_tx_keyidx", "scan_freq", "freq_list", "eap",
                       "eapol_flags", "fragment_size", "scan_ssid", "auth_alg",
-- 
2.40.1

